{"version":3,"sources":["webpack:///./src/markdown/ScalingDAGCreationWithApacheAirflow.md?2a98","webpack:///./src/markdown/ScalingDAGCreationWithApacheAirflow.md?6c06","webpack:///./src/markdown/ScalingDAGCreationWithApacheAirflow.md"],"names":["ScalingDAGCreationWithApacheAirflow","render","this","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","_v","staticClass","attrs","id","pre","v-pre","class","Component","__webpack_require__","normalizeComponent","__webpack_exports__","module","exports"],"mappings":"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","file":"static/js/1.b1d0d1e9dea53d15fad9.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('h1',[_vm._v(\"Scaling DAG Creation With Apache Airflow\")]),_vm._v(\" \"),_c('p',[_vm._v(\"One of the more difficult tasks within the Data Science community is not designing a model to a well-constructed business problem or developing the code-base to operate in a scalable environment, but, rather, arranging the tasks in the ETL, or in the Data Science pipeline, executing the model on a periodic basis and automating everything in-between.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"This is where Apache Airflow comes to the rescue! With the Airflow UI to display the task in a graph form, and with the ability to programmatically define your workflow to increase traceability, it is much easier to define and configure your Data Science workflow in production.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"One difficulty still remains, though. There are circumstances when the same modelling, monolithic, process is utilized and applied to different data sources. To increase performance, it is better to have each of these processes run concurrently, rather than add them to the same dag.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"No problem, let us simply create a dag for each process, all with similar tasks, and schedule them to run at the same time. If we were to follow along software development principle DRY, is there a way to create multiple different dags with the same-type tasks without having to manually create them?\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"The Initial Approach\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Firstly, let us assume our initial dag looks like this:\")]),_vm._v(\" \"),_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-body p-3\",attrs:{\"id\":\"code-block\"}},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-python\"}},[_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" datetime \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" datetime, timedelta\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" dateutil.relativedelta \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" relativedelta\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" time \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" sleep\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" airflow \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" DAG\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" airflow.operators.python_operator \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" PythonOperator\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"## the default arguments for the DAG\")]),_vm._v(\"\\n\\ndefault_args = {\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"depends_on_past\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"False\")]),_vm._v(\",\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"start_date\\\"\")]),_vm._v(\": datetime.now() - relativedelta(days=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"1\")]),_vm._v(\"),\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"retries\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"1\")]),_vm._v(\",\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"retry_delay\\\"\")]),_vm._v(\": timedelta(seconds=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"120\")]),_vm._v(\"),\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"email_on_failure\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"False\")]),_vm._v(\"\\n}\\n\\ndag = DAG(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"dummy\\\"\")]),_vm._v(\", default_args=default_args, schedule_interval=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"None\")]),_vm._v(\")\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"tmp\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"()\")]),_vm._v(\":\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"\\\"\\\"\\n    python function we are to use that only sleeps for 60 seconds.\\n    \\\"\\\"\\\"\")]),_vm._v(\"\\n    sleep(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"60\")]),_vm._v(\")\\n\\n    print(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"Dag passed!\\\"\")]),_vm._v(\")\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"None\")]),_vm._v(\"\\n\\nt1 = PythonOperator(python_callable=tmp, task_id=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"time\\\"\")]),_vm._v(\", dag=dag)\\n\\n\")])])])]),_vm._v(\" \"),_c('p',[_vm._v(\"The purpose of this dag is to simply sleep and then print a statement. This is a very simple dag, but let us assume this would represent our Data Science workflow. If this was the only Data Science workflow we were doing to deploy into production, we would most probably become satisfied.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"However, what if, as asked earilier, we want to create multiple dags with the same-type tasks without having to manually create them? For example, with the example of our initial dag above, what if we wanted to configure how many seconds we want to sleep before printing a statement?\")]),_vm._v(\" \"),_c('p',[_vm._v(\"This is where we need to understand which parts of our process is configurable, and then allow those to become variables in our process. Lets take another stab at our initial dag:\")]),_vm._v(\" \"),_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-body p-3\",attrs:{\"id\":\"code-block\"}},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-python\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" datetime \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" datetime, timedelta\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" dateutil.relativedelta \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" relativedelta\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" time \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" sleep\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" airflow \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" DAG\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" airflow.operators.python_operator \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" PythonOperator\\n\\ndefault_args = {\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"depends_on_past\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"False\")]),_vm._v(\",\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"start_date\\\"\")]),_vm._v(\": datetime.now() - relativedelta(days=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"1\")]),_vm._v(\"),\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"retries\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"1\")]),_vm._v(\",\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"retry_delay\\\"\")]),_vm._v(\": timedelta(seconds=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"120\")]),_vm._v(\"),\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"email_on_failure\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"False\")]),_vm._v(\"\\n}\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# this function will create a dag, define the python callable and add it to the PythonOperator\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"create_dag\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"(dag_id, seconds=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"60\")]),_vm._v(\")\")]),_vm._v(\":\")]),_vm._v(\"\\n    dag = DAG(dag_id, default_args=default_args, schedule_interval=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"None\")]),_vm._v(\")\\n\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"tmp\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"()\")]),_vm._v(\":\")]),_vm._v(\"\\n        sleep(seconds)\\n\\n        print(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"Dag passed!\\\"\")]),_vm._v(\")\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"None\")]),_vm._v(\"\\n\\n    t1 = PythonOperator(python_callable=tmp, task_id=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"time\\\"\")]),_vm._v(\", dag=dag)\\n\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" dag\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# here we create a global variable called dummy dag, which will store the DAG object here.\")]),_vm._v(\"\\nglobals()[\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"dummy_dag\\\"\")]),_vm._v(\"] = create_dag(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"dummy\\\"\")]),_vm._v(\", \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"60\")]),_vm._v(\")\\n\")])])])]),_vm._v(\" \"),_c('p',[_vm._v(\"When a variable is added to the global dictionary in a python script, it is rendered and treated as a variable that was created in the global-scope, even if it was initially created in the function-scope. Now you can create multiple dags, with similar tasks, with ease.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Generally, most would simply create multiple python scripts with similar DAG creation processes.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"However, there is a better way.\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"Configurable Task Assignments To a Specific Dag\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Consider this example, where we initial define this in a python module called task_assigner.py\")]),_vm._v(\" \"),_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-body p-3\",attrs:{\"id\":\"code-block\"}},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-python\"}},[_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" functools \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" reduce\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" airflow.operators \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" *\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# this will be just a small subset of operators that we will define\")]),_vm._v(\"\\ntask_dict = {\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"external_task\\\"\")]),_vm._v(\": ExternalTaskSensor,\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'python_operator'\")]),_vm._v(\": PythonOperator,\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'trigger_dag'\")]),_vm._v(\": TriggerDagOperator,\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"bash\\\"\")]),_vm._v(\": BashOperator\\n}\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-class\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"class\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"TaskAssigner\")]),_vm._v(\":\")]),_vm._v(\"\\n\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"__init__\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"(self, parent_dag)\")]),_vm._v(\":\")]),_vm._v(\"\\n        self.parent_dag = parent_dag\\n\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"define_tasks\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"(self, task_params)\")]),_vm._v(\":\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"\\\"\\\"\\n    This will use the task_dict to help map the task define to the appropriate task with the correct parameters\\n\\n    :param tsk_name: The unique name of the task\\n    :type: str\\n    :param task_params: The parameters for all the task\\n    :type: dict\\n    \\\"\\\"\\\"\")]),_vm._v(\"\\n\\n        defined_tsk_dict = {}\\n\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"for\")]),_vm._v(\" tsk \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"in\")]),_vm._v(\" task_params.keys():\\n            dag_type = task_params[tsk][\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"type\\\"\")]),_vm._v(\"]\\n            params = task_params[tsk][\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"params\\\"\")]),_vm._v(\"]\\n            params[\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"dag\\\"\")]),_vm._v(\"] = self.parent_dag\\n            params[\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"task_id\\\"\")]),_vm._v(\"] = tsk\\n\\n            defined_tsk_dict[tsk] = task_dict[dag_type](**params)\\n\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" defined_tsk_dict\\n\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"map_task\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"(self, tsk_names, defined_task_dict)\")]),_vm._v(\":\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"\\\"\\\"\\n    This will help map the sequence of the tasks to the appropriate defined task\\n\\n    :param tsk_names: The sequence of the tasks to run\\n    :type tsk_names: str\\n    :param defined_task_dict: The dictionary of defined tasks\\n    :type defined_task_dict: dict\\n    \\\"\\\"\\\"\")]),_vm._v(\"\\n\\n        res_lst = []\\n\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"for\")]),_vm._v(\" tsks \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"in\")]),_vm._v(\" tsk_names:\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"if\")]),_vm._v(\" isinstance(tsks, list):\\n                res_lst.append(self.map_task(tsks, defined_task_dict))\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"elif\")]),_vm._v(\" isinstance(tsks, str):\\n                res_lst.append(defined_task_dict[tsks])\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"else\")]),_vm._v(\":\\n                \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"raise\")]),_vm._v(\" ValueError\\n\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" res_lst    \\n\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"run\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"(self, task_sequence, task_params)\")]),_vm._v(\":\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"\\\"\\\"\\n    This will assign each task in the sequence, with the right parameters, to the parent dag\\n\\n    :param task_sequence: This will be a list of, or a list of list, of strings\\n    :type task_sequence: List[List[str]] or List[List[List[str]]], or something in between.\\n    :param task_params: The parameters for all the task\\n    :type task_params: dict\\n    \\\"\\\"\\\"\")]),_vm._v(\"\\n\\n        defined_task_dict = self.define_tasks(task_params)\\n\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# this is a List[List[Tasks]] or a List[List[List[Tasks]]]\")]),_vm._v(\"\\n        run_lst = self.map_task(task_sequence, defined_task_dict)\\n\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"tmf\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"(tsks)\")]),_vm._v(\":\")]),_vm._v(\"\\n            reduce(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"lambda\")]),_vm._v(\" tsk1, tsk2: tsk1 >> tsk2, tsks[\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"1\")]),_vm._v(\":], tsks[\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"0\")]),_vm._v(\"])\\n\\n        list(map(tmp, run_lst))\\n\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"None\")]),_vm._v(\"\\n\\n\")])])])]),_vm._v(\" \"),_c('p',[_vm._v(\"Then in another script you use the TaskAssigner, lets say in dag.py\")]),_vm._v(\" \"),_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-body p-3\",attrs:{\"id\":\"code-block\"}},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-python\"}},[_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" json\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" datetime \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" datetime, timedelta\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" dateutil.relativedelta \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" relativedelta\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" time \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" sleep\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" airflow \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" DAG\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" airflow.operators.python_operator \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" PythonOperator\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" task_assigner \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" TaskAssigner\\n\\ndefault_args = {\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"depends_on_past\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"False\")]),_vm._v(\",\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"start_date\\\"\")]),_vm._v(\": datetime.now() - relativedelta(days=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"1\")]),_vm._v(\"),\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"retries\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"1\")]),_vm._v(\",\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"retry_delay\\\"\")]),_vm._v(\": timedelta(seconds=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"120\")]),_vm._v(\"),\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"email_on_failure\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"False\")]),_vm._v(\"\\n}\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# now what we do is create a dag, pass it into the TaskAssigner\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# with the dag sequence and the params for each task in the dag.\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"create_dag\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"(dag_id, dag_sequence, dag_params)\")]),_vm._v(\":\")]),_vm._v(\"\\n    dag = DAG(dag_id, default_args=default_args, schedule_interval=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"None\")]),_vm._v(\")\\n\\n    tsk_assign = TaskAssigner(dag)\\n\\n    tsk_assign.run(dag_sequence, dag_params)\\n\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" dag\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# we read in our configuration file with our parameters in the dag\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"with\")]),_vm._v(\" open(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"dag_configs.json\\\"\")]),_vm._v(\") \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"as\")]),_vm._v(\" f:\\n    config = json.load(f)\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# we loop through each dag id in the JSON file, and then create our dag and add it as a global variable here.\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"for\")]),_vm._v(\" dg_id \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"in\")]),_vm._v(\" config.keys():\\n    globals()[dg_id] = create_dag(dg_id, config[dg_id][\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"dag_sequence\\\"\")]),_vm._v(\"], config[dg_id][\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"dag_params\\\"\")]),_vm._v(\"])\\n\\n\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"The dag_configs.json used here is:\")]),_vm._v(\" \"),_c('div',{staticClass:\"card p-3\",attrs:{\"id\":\"code-block\"}},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-json\"}},[_vm._v(\"{\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-attr\"}},[_vm._v(\"\\\"dummy\\\"\")]),_vm._v(\": {\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-attr\"}},[_vm._v(\"\\\"dag_sequence\\\"\")]),_vm._v(\": [[\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"dummy\\\"\")]),_vm._v(\"]],\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-attr\"}},[_vm._v(\"\\\"dag_params\\\"\")]),_vm._v(\": {\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-attr\"}},[_vm._v(\"\\\"dummy\\\"\")]),_vm._v(\": {\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-attr\"}},[_vm._v(\"\\\"type\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"bash\\\"\")]),_vm._v(\",\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-attr\"}},[_vm._v(\"\\\"params\\\"\")]),_vm._v(\": {\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-attr\"}},[_vm._v(\"\\\"bash_command\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"sleep 60\\\"\")]),_vm._v(\"}\\n      }\\n    }\\n  }\\n}\\n\")])])])]),_vm._v(\" \"),_c('h2',[_vm._v(\"Putting It All Together\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Now, we discussed how to define multiple dags utilizing OOP, which is DRY compliant. However, this is assuming each dag is independent of each other, which is not normally the case within practice. There are cases where each dag is possibly dependent on another dag.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"What do you think the solution is?\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Please reach out to PyScale on twitter with your solution!\")]),_vm._v(\" \"),_c('p',[_vm._v(\"As always, #happycoding!\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-46c32a50\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./src/markdown/ScalingDAGCreationWithApacheAirflow.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-46c32a50\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!../../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./ScalingDAGCreationWithApacheAirflow.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader!./node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./src/markdown/ScalingDAGCreationWithApacheAirflow.md\n// module id = null\n// module chunks = ","module.exports = require(\"!!vue-loader!../../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./ScalingDAGCreationWithApacheAirflow.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/markdown/ScalingDAGCreationWithApacheAirflow.md\n// module id = X7wI\n// module chunks = 1"],"sourceRoot":""}